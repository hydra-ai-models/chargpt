# Utilities for model evaluation.

import torch
from torchvision import transforms
from IPython.display import display

def visualize_predictions(input_image, input_text, noisy_image, predictions, num_predictions_to_visualize = 2) -> None:
    '''
        Function to visualize model predictions.

        Args:
            1. input_image: Original images without noise. This should be a torch Tensor of size [Batches, Channels, Width, Height].
            2. input_text: Text corresponding to the image. This should be a torch tensor of size [Batches, BlockSize].
            3. noisy_image: Noisy image generated by the noise scheduler. This should be a torch Tensor of size [Batches, Channels, Width, Height].
            4. predictions: Denoised image by the image diffusion model. This should be a torch Tensor of size [Batches, Channels, Width, Height].
            5. num_predictions_to_visualize: Number of images in the batch to be visualized. Default value is 2.

        Returns:
            None.
    '''
    (batch_size, _, _, _) = input_image.shape
    for batch_index in range(min(batch_size, num_predictions_to_visualize)):
        current_tensor = torch.cat([input_image[batch_index], noisy_image[batch_index], predictions[batch_index]], dim = 2)
        display(transforms.ToPILImage()(current_tensor))
